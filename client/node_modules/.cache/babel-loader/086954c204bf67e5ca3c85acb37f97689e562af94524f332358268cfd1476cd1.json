{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Use environment variables for headers\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY // Use an environment variable for the key\n};\n\n// Use an environment variable for the base URL\nconst baseUrl = process.env.REACT_APP_BASE_URL || 'https://coinranking1.p.rapidapi.com'; // Fallback to default if not set\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  // Use the baseUrl constant directly\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({\n        coinId,\n        timeperiod\n      }) => createRequest(`/coin/${coinId}/history?timeperiod=${timeperiod}`)\n    })\n  })\n});\n\n// Export hooks for usage in functional components\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery\n} = cryptoApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","cryptoApiHeaders","process","env","REACT_APP_RAPIDAPI_KEY","baseUrl","REACT_APP_BASE_URL","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery"],"sources":["C:/Users/ilusa/OneDrive/Desktop/New folder/Cryptoapp/client/src/services/cryptoApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// Use environment variables for headers\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY, // Use an environment variable for the key\r\n};\r\n\r\n// Use an environment variable for the base URL\r\nconst baseUrl = process.env.REACT_APP_BASE_URL || 'https://coinranking1.p.rapidapi.com'; // Fallback to default if not set\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }), // Use the baseUrl constant directly\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) => createRequest(`/coin/${coinId}/history?timeperiod=${timeperiod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\n// Export hooks for usage in functional components\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,MAAMC,gBAAgB,GAAG;EACvB,iBAAiB,EAAE,6BAA6B;EAChD,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAE;AACxD,CAAC;;AAED;AACA,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,kBAAkB,IAAI,qCAAqC,CAAC,CAAC;;AAEzF,MAAMC,aAAa,GAAIC,GAAG,KAAM;EAC9BA,GAAG;EACHC,OAAO,EAAER;AACX,CAAC,CAAC;AAEF,OAAO,MAAMS,SAAS,GAAGX,SAAS,CAAC;EACjCY,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEZ,cAAc,CAAC;IAAEK;EAAQ,CAAC,CAAC;EAAE;EACxCQ,SAAS,EAAGC,OAAO,KAAM;IACvBC,UAAU,EAAED,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAGC,KAAK,IAAKV,aAAa,CAAC,gBAAgBU,KAAK,EAAE;IACzD,CAAC,CAAC;IACFC,gBAAgB,EAAEJ,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAGG,MAAM,IAAKZ,aAAa,CAAC,SAASY,MAAM,EAAE;IACpD,CAAC,CAAC;IACFC,gBAAgB,EAAEN,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAEA,CAAC;QAAEG,MAAM;QAAEE;MAAW,CAAC,KAAKd,aAAa,CAAC,SAASY,MAAM,uBAAuBE,UAAU,EAAE;IACrG,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACXC,kBAAkB;EAClBC,wBAAwB;EACxBC;AACF,CAAC,GAAGd,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}